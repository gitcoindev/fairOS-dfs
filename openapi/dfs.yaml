openapi: 3.0.0

info:
  version: 0.7.3
  title: FairOS-dfs API
  description: 'A list of the currently provided Interfaces to interact with FairOS decentralised file system(dfs), implementing user, pod, file system, key value store and document store'

externalDocs:
  description: Browse the documentation @ the FairOS-dfs Docs
  url: 'https://fairos.io'

servers:
  - url: 'http://{apiRoot}:{port}/v1'
    variables:
      apiRoot:
        default: 'localhost'
        description: Base address of the local dfs node API
      port:
        default: '9090'
        description: Base port of the local dfs node which exposes the REST APIs

paths:
  '/user/signup':
    post:
      summary: 'Signup user'
      description: 'Signs up a user and subsequently logs in returning the authentication cookie `fairOS-dfs`.
      The cookie needs to be sent n the request header in all subsequent requests.
      Input is a form object containing the login, password and optionally mnemonic.'
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  $ref: '#/components/schemas/UserName'
                password:
                  $ref: '#/components/schemas/Password'
                mnemonic:
                  $ref: '#/components/schemas/Mnemonic'
              required:
                - user_name
                - password
      responses:
        '201':
          description: 'Created'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: 'fairOS-dfs=MTYxMjUwNDI5NnxSMmFYcUphYU5CWTFsYTlxMkYzaG4xT3N3RkRlQlFUT2UxRVVnelZWcmVBb0dkVWNVUHNUSU95QVZhUjVodXhvR2YyUTJNM1IwRkpncGxXNXhzM0ZycHZPMW9vTlJldW4yRm9kYjBNOENfb3pEaDVEQWp2bl94M3lLOTdPWUZ6bXdpU1FQU01pTm1oUG5MMENZOHVmV1FHYlc4OVpyekE2SzBuWjVKWkFMb2Q5fAwgQztL4Efy82UoSjN5Rv9v77glLGsbqzQUmmyI0cNg; Path=/; Domain=api.fairos.io; Expires=Sat, 06 Feb 2021 05:51:36 GMT; HttpOnly; Secure; SameSite=None'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UserSignupResponse'
                  - $ref: '#/components/schemas/UserSignupResponseWithMnemonic'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/user/login':
    post:
      summary: 'Login user'
      description: 'Logs in user and returns the authentication cookie `fairOS-dfs in the header.
      The cookie needs to be sent n the request header in all subsequent requests.
      Input is a form object containing the login and password.'
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  $ref: '#/components/schemas/UserName'
                password:
                  $ref: '#/components/schemas/Password'
              required:
                - user_name
                - password
      responses:
        '200':
          description: 'OK'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: fairOS-dfs=MTYxMjUwNDI5NnxSMmFYcUphYU5CWTFsYTlxMkYzaG4xT3N3RkRlQlFUT2UxRVVnelZWcmVBb0dkVWNVUHNUSU95QVZhUjVodXhvR2YyUTJNM1IwRkpncGxXNXhzM0ZycHZPMW9vTlJldW4yRm9kYjBNOENfb3pEaDVEQWp2bl94M3lLOTdPWUZ6bXdpU1FQU01pTm1oUG5MMENZOHVmV1FHYlc4OVpyekE2SzBuWjVKWkFMb2Q5fAwgQztL4Efy82UoSjN5Rv9v77glLGsbqzQUmmyI0cNg; Path=/; Domain=api.fairos.io; Expires=Sat, 06 Feb 2021 05:51:36 GMT; HttpOnly; Secure; SameSite=None
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/user/import':
    post:
      summary: 'Import user'
      description: 'Import a user from one dfs server to another and subsequently logs in returning the authentication cookie `fairOS-dfs`.
      The cookie needs to be sent n the request header in all subsequent requests.
      Importing is useful when a user switches machines or lost a old machine which was running his dfs server.
      Input contains a form object containing the login, password, ethereum address and optionally mnemonic.
      If mnemonic is provided a user will be created while importing.'
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UserImportArg1'
                - $ref: '#/components/schemas/UserImportArg2'
      responses:
        '201':
          description: 'Created'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: fairOS-dfs=MTYxMjUwNDI5NnxSMmFYcUphYU5CWTFsYTlxMkYzaG4xT3N3RkRlQlFUT2UxRVVnelZWcmVBb0dkVWNVUHNUSU95QVZhUjVodXhvR2YyUTJNM1IwRkpncGxXNXhzM0ZycHZPMW9vTlJldW4yRm9kYjBNOENfb3pEaDVEQWp2bl94M3lLOTdPWUZ6bXdpU1FQU01pTm1oUG5MMENZOHVmV1FHYlc4OVpyekE2SzBuWjVKWkFMb2Q5fAwgQztL4Efy82UoSjN5Rv9v77glLGsbqzQUmmyI0cNg; Path=/; Domain=api.fairos.io; Expires=Sat, 06 Feb 2021 05:51:36 GMT; HttpOnly; Secure; SameSite=None
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignupResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/user/present':
    get:
      summary: 'User present'
      description: 'Check if an user is present in a given dfs-server.
      Input contains form object containing the user name to check if it is present in the dfs server.'
      tags:
        - User
      parameters:
        - in: query
          name: fields
          schema:
            type: object
            properties:
              user_name:
                type: string
            required:
              - user_name
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPresentResponse'
        '400':
          $ref: '#/components/responses/400'

  '/user/isloggedin':
    get:
      summary: 'Is logged-in'
      description: 'Check if a user is logged in already.
      Input contains a form object containing the user name to check if it is logged-in in the dfs server.'
      tags:
        - User
      parameters:
        - in: query
          name: fields
          schema:
            type: object
            properties:
              user_name:
                type: string
            required:
              - user_name
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoggedInResponse'
        '400':
          $ref: '#/components/responses/400'

  '/user/logout':
    post:
      summary: 'Logout user'
      description: 'Logout a logged-in user from the dfs server.'
      tags:
        - User
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/user/export':
    post:
      summary: 'Export user'
      description: 'Export user so that ic can be imported in another machine'
      tags:
        - User
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserExportResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/user/delete':
    delete:
      summary: 'Delete user'
      description: 'Delete a logged-in user from the dfs server.'
      tags:
        - User
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  $ref: '#/components/schemas/Password'
              required:
                - password
      responses:
        '200':
          description: 'OK'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/user/stat':
    get:
      summary: 'User stat'
      description: 'Delete a logged-in user from the dfs server.'
      tags:
        - User
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/UserStatResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/receiveinfo':
    get:
      summary: 'Pod receive Info'
      description: 'shows the pod info of the pod that is to be received'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              reference:
                $ref: '#/components/schemas/FileSharingReference'
            required:
              - reference
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodReceiveInfo'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/receive':
    get:
      summary: 'Pod receive'
      description: 'make a pod public and share it with others'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              reference:
                $ref: '#/components/schemas/FileSharingReference'
            required:
              - reference
      responses:
        '200':
          description: 'OK'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/new':
    post:
      summary: 'New pod'
      description: 'create a new pod'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                password:
                  $ref: '#/components/schemas/Password'
              required:
                - pod_name
                - password
      responses:
        '201':
          description: 'Ok'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: 'fairOS-dfs=MTYxMjUwNDI5NnxSMmFYcUphYU5CWTFsYTlxMkYzaG4xT3N3RkRlQlFUT2UxRVVnelZWcmVBb0dkVWNVUHNUSU95QVZhUjVodXhvR2YyUTJNM1IwRkpncGxXNXhzM0ZycHZPMW9vTlJldW4yRm9kYjBNOENfb3pEaDVEQWp2bl94M3lLOTdPWUZ6bXdpU1FQU01pTm1oUG5MMENZOHVmV1FHYlc4OVpyekE2SzBuWjVKWkFMb2Q5fAwgQztL4Efy82UoSjN5Rv9v77glLGsbqzQUmmyI0cNg; Path=/; Domain=api.fairos.io; Expires=Sat, 06 Feb 2021 05:51:36 GMT; HttpOnly; Secure; SameSite=None'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/open':
    post:
      summary: 'Open pod'
      description: 'Opens a pod'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                password:
                  $ref: '#/components/schemas/Password'
              required:
                - pod_name
                - password
      responses:
        '200':
          description: 'Ok'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: 'fairOS-dfs=MTYxMjUwNDI5NnxSMmFYcUphYU5CWTFsYTlxMkYzaG4xT3N3RkRlQlFUT2UxRVVnelZWcmVBb0dkVWNVUHNUSU95QVZhUjVodXhvR2YyUTJNM1IwRkpncGxXNXhzM0ZycHZPMW9vTlJldW4yRm9kYjBNOENfb3pEaDVEQWp2bl94M3lLOTdPWUZ6bXdpU1FQU01pTm1oUG5MMENZOHVmV1FHYlc4OVpyekE2SzBuWjVKWkFMb2Q5fAwgQztL4Efy82UoSjN5Rv9v77glLGsbqzQUmmyI0cNg; Path=/; Domain=api.fairos.io; Expires=Sat, 06 Feb 2021 05:51:36 GMT; HttpOnly; Secure; SameSite=None'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/close':
    post:
      summary: 'Close pod'
      description: 'Closes a pod'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
              required:
                - pod_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/sync':
    post:
      summary: 'Sync pod'
      description: 'Syncs the latest contents of the pod from Swarm'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
              required:
                - pod_name
      responses:
        '200':
          description: 'Synced'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/share':
    post:
      summary: 'Share pod'
      description: 'Shared a pod'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                password:
                  $ref: '#/components/schemas/Password'
              required:
                - pod_name
                - password
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  pod_sharing_reference:
                    $ref: '#/components/schemas/FileSharingReference'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/delete':
    delete:
      summary: 'Delete pod'
      description: 'Deletes a pod'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                password:
                  $ref: '#/components/schemas/Password'
              required:
                - pod_name
                - password

      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/ls':
    get:
      summary: 'List pod'
      description: 'Lists all pods of a user'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  pod_name:
                    $ref: '#/components/schemas/PodList'
                  shared_pod_name:
                    $ref: '#/components/schemas/SharedPodList'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/stat':
    get:
      summary: 'Stat pod'
      description: 'Show all the information about a pod'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
              required:
                - pod_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  pod_name:
                    $ref: '#/components/schemas/PodName'
                  address:
                    $ref: '#/components/schemas/EthereumAddress'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/pod/present':
    get:
      summary: 'Pod Present'
      description: 'Is Pod present'
      tags:
        - Pod
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
            required:
              - pod_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirPresentResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/dir/mkdir':
    post:
      summary: 'Make dir'
      description: 'make a new directory inside a pod'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                dir_path:
                  $ref: '#/components/schemas/DirPath'
              required:
                - dir_path
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/dir/rmdir':
    delete:
      summary: 'Remove dir'
      description: 'remove a directory inside a pod'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                dir_path:
                  $ref: '#/components/schemas/DirPath'
              required:
                - pod_name
                - dir_path
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/dir/ls':
    get:
      summary: 'List dir'
      description: 'List all the files and directory inside a directory'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              dir_path:
                $ref: '#/components/schemas/DirPath'
            required:
              - pod_name
              - dir_path
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                type: object
                properties:
                  dirs:
                    $ref: '#/components/schemas/ListDirectory'
                  files:
                    $ref: '#/components/schemas/ListFiles'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/dir/stat':
    get:
      summary: 'Stat dir'
      description: 'Show a directory related information'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              dir_path:
                $ref: '#/components/schemas/DirPath'
            required:
              - pod_name
              - dir_path
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/DirectoryStat'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/dir/present':
    get:
      summary: 'Dir Present'
      description: 'Is directory present'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              dir_path:
                $ref: '#/components/schemas/DirPath'
            required:
              - pod_name
              - dir_path
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirPresentResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/file/upload':
    post:
      summary: 'Upload File'
      description: 'upload a file to dfs'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: header
          name: 'fairOS-dfs-Compression'
          schema:
            type: string
            enum: [gzip, snappy]
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                pod_dir:
                  $ref: '#/components/schemas/DirName'
                block_size:
                  type: string
                  example: 10M
              required:
                - pod_name
                - pod_dir
                - block_size
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  format: binary
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/file/download':
    get:
      summary: 'Download file'
      description: 'Download a file from the pod tp the local dir'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                file_path:
                  $ref: '#/components/schemas/DirPath'
              required:
                - pod_name
                - file_path
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

    post:
      summary: 'Download file'
      description: 'Download a file from the pod tp the local dir'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                file_path:
                  $ref: '#/components/schemas/DirPath'
              required:
                - pod_name
                - file_path
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/file/share':
    post:
      summary: 'Share file'
      description: 'Share a file with another user'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                pod_path_file:
                  $ref: '#/components/schemas/FileNameWithPath'
                dest_user:
                  $ref: '#/components/schemas/EthereumAddress'
              required:
                - pod_name
                - pod_path_file
                - dest_user
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSharingResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/file/receive':
    get:
      summary: 'Receive file'
      description: 'Receive file that was shared by another user'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              sharing_ref:
                $ref: '#/components/schemas/FileSharingReference'
              dir_path:
                $ref: '#/components/schemas/DirName'
            required:
              - pod_name
              - sharing_ref
              - dir_path
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
               type: object
               properties:
                file_name:
                  $ref: '#/components/schemas/FileNameWithPath'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/file/receiveinfo':
    get:
      summary: 'Receive file info'
      description: 'Receive file info that is being shared by another user'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              sharing_ref:
                $ref: '#/components/schemas/FileSharingReference'
            required:
              - pod_name
              - sharing_ref
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiveFileInfo'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/file/delete':
    delete:
      summary: 'Delete info'
      description: 'Delete a file in the pod'
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                file_path:
                  $ref: '#/components/schemas/FileNameWithPath'
              required:
                - pod_name
                - file_path
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/file/stat':
    get:
      summary: 'Stat info'
      description: 'Get the information about a file in the pod '
      tags:
        - File System
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              file_path:
                $ref: '#/components/schemas/FileNameWithPath'
            required:
              - pod_name
              - file_path
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileStatInfo'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/new':
    post:
      summary: 'Create New table'
      description: 'Create a new key value table'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/KVTableName'
                indexType:
                  $ref: '#/components/schemas/KVIndexType'
              required:
                - pod_name
                - table_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/ls':
    get:
      summary: 'List Tables'
      description: 'List all the Key Value tables of this pod'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
            required:
              - pod_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KVList'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/open':
    post:
      summary: 'Open table'
      description: 'Opens a already created key value table'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/KVTableName'
              required:
                - pod_name
                - table_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/count':
    post:
      summary: 'Count table'
      description: 'Count KV pairs in a table'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/KVTableName'
              required:
                - pod_name
                - table_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KVCount'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/delete':
    delete:
      summary: 'Delete table'
      description: 'Delete a KV table of a pod'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/KVTableName'
              required:
                - pod_name
                - table_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/entry/put':
    post:
      summary: 'Put Key Value'
      description: 'Inserts a Key Value pair in the table'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/KVTableName'
                key:
                  $ref: '#/components/schemas/KVKey'
                value:
                  $ref: '#/components/schemas/KVValue'
              required:
                - pod_name
                - table_name
                - key
                - value
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/entry/get':
    get:
      summary: 'Get Value'
      description: 'Get value given a key'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              table_name:
                $ref: '#/components/schemas/KVTableName'
              key:
                $ref: '#/components/schemas/KVKey'
            required:
              - pod_name
              - table_name
              - key
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                properties:
                  keys:
                    $ref: '#/components/schemas/KVgetResponseKeys'
                  values:
                    $ref: '#/components/schemas/KVgetResponseValues'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/entry/get-data':
    get:
      summary: 'Get Value'
      description: 'Get value given a key'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              table_name:
                $ref: '#/components/schemas/KVTableName'
              key:
                $ref: '#/components/schemas/KVKey'
              format:
                type: string
                enum: [ string, byte-string ]
            required:
              - pod_name
              - table_name
              - key
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                properties:
                  keys:
                    $ref: '#/components/schemas/KVgetResponseKeys'
                  values:
                    $ref: '#/components/schemas/KVgetResponseValues'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/entry/del':
    delete:
      summary: 'Delete Value'
      description: 'Delete a KV pair given a key'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/KVTableName'
                key:
                  $ref: '#/components/schemas/KVKey'
              required:
                - pod_name
                - table_name
                - key
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/seek':
    post:
      summary: 'Seek Key'
      description: 'Seek a KV pair given a key or its prefix'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              table_name:
                $ref: '#/components/schemas/KVTableName'
              start:
                  $ref: '#/components/schemas/KVKey'
              end:
                  $ref: '#/components/schemas/KVKey'
              limit:
                  type: integer
            required:
              - pod_name
              - table_name
              - start
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/seek/next':
    get:
      summary: 'Get Next'
      description: 'Get Next value after the Seek'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/KVTableName'
              required:
                - pod_name
                - table_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                properties:
                  keys:
                    $ref: '#/components/schemas/KVgetResponseKeys'
                  values:
                    $ref: '#/components/schemas/KVgetResponseValues'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/loadcsv':
    post:
      summary: 'LoadCSV'
      description: 'load a csv file in to a given KV table'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_ame:
                  $ref: '#/components/schemas/KVTableName'
                memory:
                    $ref: '#/components/schemas/KVMemoryTable'
              required:
                - pod_name
                - table_ame
          multipart/form-data:
            schema:
              type: object
              properties:
                csv:
                  type: string
                  format: binary
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/kv/present':
    get:
      summary: 'Key Present'
      description: 'Is Key present'
      tags:
        - Key Value Store
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              table_name:
                $ref: '#/components/schemas/KVTableName'
              key:
                $ref: '#/components/schemas/KVKey'
            required:
              - pod_name
              - table_name
              - key
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirPresentResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/new':
    post:
      summary: 'Create DocumentDB'
      description: 'create a document DB with the given fields as indexes'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/DocTableName'
                si:
                  $ref: '#/components/schemas/DocFieldIndex'
                mutable:
                  $ref: '#/components/schemas/DocMutable'
              required:
                - pod_name
                - table_name
                - si
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/ls':
    get:
      summary: 'List DocumentDBs'
      description: 'list all the document dbs of the pod'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
            required:
              - pod_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                properties:

                  keys:
                    $ref: '#/components/schemas/DocListResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/open':
    post:
      summary: 'Open DocumentDB'
      description: 'open a already created document DB'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/DocTableName'
              required:
                - pod_name
                - table_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/count':
    post:
      summary: 'Count Documents'
      description: 'Count all the documents based on the expression'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/DocTableName'
                expr:
                  type: string
                  example: "age>45"
              required:
                - pod_name
                - table_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/delete':
    delete:
      summary: 'Delete DocumentDB'
      description: 'Delete the given document DB and all its documents and indexes'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/DocTableName'
              required:
                - pod_name
                - table_name
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/find':
    get:
      summary: 'Find Documents'
      description: 'Find documents from the DB based on a expression'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              table_name:
                $ref: '#/components/schemas/DocTableName'
              expr:
                type: string
                example: "age>45"
              limit:
                type: integer
                example: 20
            required:
              - pod_name
              - table_name
              - expr
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                properties:
                  keys:
                    $ref: '#/components/schemas/DocFindResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/loadjson':
    post:
      summary: 'LoadJson'
      description: 'load a json file in to a given document DB'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/DocTableName'
              required:
                - pod_name
                - table_name
          multipart/form-data:
            schema:
              type: object
              properties:
                json:
                  type: string
                  format: binary
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/indexjson':
    post:
      summary: 'IndexJson'
      description: 'Index the json file present in the pod'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/DocTableName'
                file:
                  $ref: '#/components/schemas/PodFileName'
              required:
                - pod_name
                - table_name
                - file
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/entry/put':
    post:
      summary: 'Put Document'
      description: 'Insert the document in the documentDB'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/DocTableName'
                doc:
                  $ref: '#/components/schemas/FileNameWithPath'
              required:
                - pod_name
                - table_name
                - doc
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/entry/get':
    get:
      summary: 'Get Document'
      description: 'Get the document from the documentDB given the id'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
        - in: query
          name: fields
          schema:
            type: object
            properties:
              pod_name:
                $ref: '#/components/schemas/PodName'
              table_name:
                $ref: '#/components/schemas/DocTableName'
              id:
                $ref: '#/components/schemas/DocId'
            required:
              - pod_name
              - table_name    
              - id
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                  type: string
                  format: byte
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  '/doc/entry/del':
    delete:
      summary: 'Get Document'
      description: 'Get the document from the documentDB given the id'
      tags:
        - Document DB
      parameters:
        - in: cookie
          name: fairOS-dfs
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pod_name:
                  $ref: '#/components/schemas/PodName'
                table_name:
                  $ref: '#/components/schemas/DocTableName'
                id:
                  $ref: '#/components/schemas/DocId'
              required:
                - pod_name
                - table_name
                - id
      responses:
        '200':
          description: 'Ok'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

components:
  schemas:
    UserSignupResponse:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/EthereumAddress'

    UserSignupResponseWithMenonic:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/EthereumAddress'
        mnemonic:
          $ref: '#/components/schemas/Mnemonic'

    UserPresentResponse:
      type: object
      properties:
        present:
          type: boolean
          example: true

    UserLoggedInResponse:
      type: object
      properties:
        loggedin:
          type: boolean
          example: true

#    OkResponse:
#      type: object
#      properties:
#        message:
#          type: string
#          example: "done"

    UserExportResponse:
      type: object
      properties:
        user_name:
          $ref: '#/components/schemas/UserName'
        address:
          $ref: '#/components/schemas/EthereumAddress'

    UserStatResponse:
      type: object
      properties:
        user_name:
          $ref: '#/components/schemas/UserName'
        reference:
          $ref: '#/components/schemas/EthereumAddress'

    UserImportArg1:
      type: object
      properties:
        user_name:
          $ref: '#/components/schemas/UserName'
        password:
          $ref: '#/components/schemas/Password'
        address:
          $ref: '#/components/schemas/EthereumAddress'

    UserImportArg2:
      type: object
      properties:
        user_name:
          $ref: '#/components/schemas/UserName'
        password:
          $ref: '#/components/schemas/Password'
        mnemonic:
          $ref: '#/components/schemas/Mnemonic'


    PodReceiveInfo:
      type: object
      properties:
        pod_name:
          $ref: '#/components/schemas/PodName'
        pod_address:
          $ref: '#/components/schemas/EthereumAddress'
        user_name:
          $ref: '#/components/schemas/UserName'
        user_address:
          $ref: '#/components/schemas/EthereumAddressAnotherOne'
        shared_time:
          $ref: '#/components/schemas/Time'

    PodList:
      type: array
      items:
        $ref: '#/components/schemas/PodName'

    SharedPodList:
      type: array
      items:
        $ref: '#/components/schemas/SharedPodName'

    DirEntryType:
      type: string
      pattern: 'File/Dir'
      example: "File"

    ListDirectory:
      type: object
      properties:
        entries:
          type: object
          additionalProperties:
            type: array
            items:
              properties:
                name:
                  $ref: '#/components/schemas/DirName'
                type:
                  $ref: '#/components/schemas/DirEntryType'
                size:
                  type: integer
                creation_time:
                  $ref: '#/components/schemas/Time'
                modification_time:
                  $ref: '#/components/schemas/Time'
                access_time:
                  $ref: '#/components/schemas/Time'

    ListFiles:
      type: object
      properties:
        entries:
          type: object
          additionalProperties:
            type: array
            items:
              properties:
                name:
                  $ref: '#/components/schemas/FileNameWithPath'
                type:
                  $ref: '#/components/schemas/DirEntryType'
                size:
                  type: integer
                block_size:
                  type: integer
                creation_time:
                  $ref: '#/components/schemas/Time'
                modification_time:
                  $ref: '#/components/schemas/Time'
                access_time:
                  $ref: '#/components/schemas/Time'

    DirectoryStat:
      type: object
      properties:
        pod_name:
          $ref: '#/components/schemas/PodName'
        dir_path:
          type: string
        dir_name:
          type: string
        creation_time:
          $ref: '#/components/schemas/Time'
        modification_time:
          $ref: '#/components/schemas/Time'
        access_time:
          $ref: '#/components/schemas/Time'
        no_of_directories:
          type: integer
        no_of_files:
          type: integer

    DirPresentResponse:
      type: object
      properties:
        present:
          type: boolean
          example: true
        error:
          type: string
      required:
        - present

    FileUploadResponse:
      type: object
      properties:
        file_name:
          type: string
        reference:
          oneOf:
            - $ref: '#/components/schemas/FileReference'
            - $ref: '#/components/schemas/FileReferenceEncrypted'
        error:
          type: string
      required:
        - file_name
        - reference

    FileSharingResponse:
      type: object
      properties:
        file_sharing_reference:
          $ref: '#/components/schemas/FileSharingReference'

    ReceiveFileInfo:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PodFileName'
        size:
          type: integer
        block_size:
          type: string
          example: 10M
        number_of_blocks:
          type: integer
        content_type:
          type: string
        compression:
          enum: [ gzip, snappy ]
        pod_name:
          $ref: '#/components/schemas/PodName'
        meta_ref:
          oneOf:
            - $ref: '#/components/schemas/FileReference'
            - $ref: '#/components/schemas/FileReferenceEncrypted'
        source_address:
          $ref: '#/components/schemas/EthereumAddress'
        dest_address:
          $ref: '#/components/schemas/EthereumAddressAnotherOne'
        shared_time:
          $ref: '#/components/schemas/Time'

    FileStatInfo:
      type: object
      properties:
        pod_name:
          $ref: '#/components/schemas/PodName'
        file_path:
          $ref: '#/components/schemas/PodPath'
        file_name:
          $ref: '#/components/schemas/PodFileName'
        file_size:
          type: integer
        block_size:
          type: string
          example: 10M
        compression:
          enum: [ gzip, snappy ]
        content_type:
          type: string
        creation_time:
          $ref: '#/components/schemas/Time'
        modification_time:
          $ref: '#/components/schemas/Time'
        access_time:
          $ref: '#/components/schemas/Time'
        properties:
          type: array
          items:
            properties:
              name:
                $ref: '#/components/schemas/BlockName'
              reference:
                oneOf:
                  - $ref: '#/components/schemas/FileReference'
                  - $ref: '#/components/schemas/FileReferenceEncrypted'
              size:
                type: integer
              compressed_size:
                type: integer

    KVList:
      type: array
      items:
        properties:
          table_name:
            $ref: '#/components/schemas/KVTableName'
          indexes:
            enum: [ id ]
          type:
            $ref: '#/components/schemas/KVIndexType'

    KVgetResponseKeys:
      type: array
      items:
        properties:
          key:
            type: string

    KVgetResponseValues:
      type: array
      items:
        properties:
          value:
            type: string

    DocListResponse:
      type: object
      properties:
        table_name:
          $ref: '#/components/schemas/DocTableName'
        properties:
          type: array
          items:
            properties:
              name:
                $ref: '#/components/schemas/DocFieldName'
              type:
                $ref: '#/components/schemas/DocIndexType'

    DocFindResponse:
      type: object
      properties:
        docs:
          $ref: '#/components/schemas/DocTableName'
        properties:
          type: array
          items:
            properties:
              doc:
                type: string
                format: byte

    Time:
      type: string
      format: date-time
      pattern: '^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{7}\+\d{2}:\d{2})$'
      example: "2020-06-11T11:26:42.6969797+02:00"

    UserName:
      type: string
      pattern: '^[A-Fa-f0-9]$'
      example: "alice"

    PodName:
      type: string
      pattern: '^[A-Fa-f0-9]$'
      example: "cdrive"

    SharedPodName:
      type: string
      pattern: '^[A-Fa-f0-9]$'
      example: "Bobs-drive"

    DirPath:
      type: string
      pattern: '^[A-Fa-f0-9]$'
      example: "/Documents/pdf"

    DirName:
      type: string
      pattern: '^[A-Fa-f0-9]$'
      example: "dir1"

    FileNameWithPath:
      type: string
      pattern: '^[A-Fa-f0-9]$'
      example: "/Documents/pdf/swarm-paper.pdf"

    PodPath:
      type: string
      pattern: '^[A-Fa-f0-9]$'
      example: "/home/"

    PodFileName:
      type: string
      pattern: '^[A-Fa-f0-9]$'
      example: "/dir1/switzerland.osm"

    BlockName:
      type: string
      example: "block00001"

    KVIndexType:
      type: string
      enum: [ string, number]

    KVTableName:
      type: string
      example: "kv_table1"

    KVCount:
      type: object
      properties:
        count:
          type: integer
        table_name:
          $ref: '#/components/schemas/KVTableName'
      required:
        - file_name
        - reference

    KVMemoryTable:
      type: string
      example: "true"

    KVKey:
      type: string
      example: "key1"

    KVValue:
      type: string
      format: byte

    DocFieldName:
      type: string
      example: first_name

    DocIndexType:
      type: string
      enum: [ string, number, map, list ]

    DocMutable:
      type: boolean
      example: true

    DocId:
      type: string
      example: "doc1"

    DocFieldIndex:
      description: string of field=indexType pairs seperated with comma (first_name=string,age=number,tags=map)
      type: string
      example: first_name=string,age=number,tags=map

    DocTableName:
      type: string
      example: "doc_table1"

    Password:
      type: string
      example: "DifficultPassword@%&149"

    Mnemonic:
      description: any combination of 12 words from BIP-39 mnemonic word list from https://github.com/bitcoin/bips/blob/master/bip-0039/english.txt
      type: string
      example: "alert record income curve mercy tree heavy loan hen recycle mean devote"

    FileReference:
      type: string
      pattern: '^[A-Fa-f0-9]{64}$'
      example: "dbd81832565d3396a01ecb003512a63b78c02e343a722a2f6a8f9328652280f8"

    FileReferenceEncrypted:
      type: string
      pattern: '^[A-Fa-f0-9]{128}$'
      example: "dbd81832565d3396a01ecb003512a63b78c02e343a722a2f6a8f9328652280f89e7acb1f7c2c5ceafc10119581b3ac4dc1e42fa6b2db9fdad8997fc52c4714f8"

    FileSharingReference:
      type: string
      pattern: '^[A-Fa-f0-9]$'
      example: "801bb9d4ab5ff66ddf73b16f9043c3742d661b53ac51254908db450e2f0eb969abf50e96612c46bcdb6bb863764d7638bac746a3a916d72fcb0d3a2308842f091612534189"

    EthereumAddress:
      type: string
      pattern: '^[A-Fa-f0-9]{40}$'
      example: "36b7efd913ca4cf880b8eeac5093fa27b0825906"

    EthereumAddressAnotherOne:
      type: string
      pattern: '^[A-Fa-f0-9]{40}$'
      example: "1dB7eD7bD48B770593075278ca6cDf5841436CB8"

    ProblemDetails:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer

    ErrorString:
      type: string

  responses:
    '204':
      description: The resource was deleted successfully.
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'